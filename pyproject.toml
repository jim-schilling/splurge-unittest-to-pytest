[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "splurge-unittest-to-pytest"
version = "2025.0.5"
description = "A tool for migrating unittest test suites to pytest format"
readme = "README.md"
requires-python = ">=3.10"
keywords = ["unittest", "pytest", "migration", "testing", "code-transformation"]
license = "MIT"
authors = [
    {name = "Jim Schilling"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
dependencies = [
    "libcst>=1.0.0",
    "typer>=0.9.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "pydantic>=2.11.9",
    "PyYAML>=6.0.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
    "pytest-xdist>=3.0.0",
    # Note: `black` and `isort` are intentionally kept as runtime dependencies above
    # because the library uses them as part of its packaging/runtime behavior.
]

[project.scripts]
splurge-unittest-to-pytest = "splurge_unittest_to_pytest.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["splurge_unittest_to_pytest*"]

[project.urls]
Homepage = "https://github.com/jim-schilling/splurge-unittest-to-pytest"
Repository = "https://github.com/jim-schilling/splurge-unittest-to-pytest"
Documentation = "https://github.com/jim-schilling/splurge-unittest-to-pytest/docs"
Issues = "https://github.com/jim-schilling/splurge-unittest-to-pytest/issues"
Changelog = "https://github.com/jim-schilling/splurge-unittest-to-pytest/blob/main/CHANGELOG.md"

# Ruff configuration
[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.isort]
known-first-party = ["splurge_unittest_to_pytest"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["F401", "F811"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--cov=splurge_unittest_to_pytest",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-report=html",
    "-v",
    "--tb=short",
    "-n", "auto",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

# mypy configuration
[tool.mypy]
# Support multiple Python versions (3.10+)
python_version = "3.10"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
# Allow untyped calls to avoid issues with external libraries
disallow_untyped_calls = false

# Exclude tests folder from mypy
[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "splurge_unittest_to_pytest.transformers.assert_transformer"
ignore_errors = true

[[tool.mypy.overrides]]
module = "splurge_unittest_to_pytest.transformers.import_transformer"
ignore_errors = true

[[tool.mypy.overrides]]
module = "splurge_unittest_to_pytest.cli"
ignore_errors = true
# Black configuration
[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 120
known_first_party = ["splurge_unittest_to_pytest"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# Coverage configuration
[tool.coverage.run]
source = ["splurge_unittest_to_pytest"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

