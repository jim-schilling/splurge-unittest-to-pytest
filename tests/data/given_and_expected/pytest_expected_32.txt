import pytest


class BaseTest:
    def helper(self, x):
        return x * 2


class TestMultiInherit(BaseTest):
    def test_helper(self):
        assert self.helper(3) == 6

    def test_using_mock(self):
        m = mock.Mock()
        m.method.return_value = 42
        assert m.method() == 42

    @pytest.mark.parametrize("i", [0, 1, 2], ids=["row_0", "row_1", "row_2"])
    def test_with_subtests(self, i: int):
        assert i < 5


def test_already_pytest_style():
    assert 1 + 1 == 2


