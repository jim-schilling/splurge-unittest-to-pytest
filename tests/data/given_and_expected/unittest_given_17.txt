import unittest
from unittest.mock import Mock, patch


class TestAdvancedMocking(unittest.TestCase):
    def setUp(self):
        self.service = ExternalService()
        self.processor = DataProcessor(self.service)
    
    def tearDown(self):
        self.service = None
        self.processor = None
    
    @patch('external_api.requests.get')
    def test_external_api_call(self, mock_get):
        mock_response = Mock()
        mock_response.json.return_value = {"status": "success"}
        mock_get.return_value = mock_response
        
        result = self.processor.fetch_data("test_endpoint")
        self.assertEqual(result["status"], "success")


class ExternalService:
    def call_api(self, endpoint):
        import external_api
        return external_api.requests.get(endpoint)


class DataProcessor:
    def __init__(self, service):
        self.service = service
    
    def fetch_data(self, endpoint):
        response = self.service.call_api(endpoint)
        return response.json()
